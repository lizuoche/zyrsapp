package com.cn.zyrs.controller;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.util.List;
import java.util.UUID;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.codec.digest.DigestUtils;
import org.apache.commons.io.FileUtils;
import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.cn.zyrs.domain.AppClothStoreFabric;
import com.cn.zyrs.domain.ResultJsonBean;
import com.cn.zyrs.service.AppClothStoreFabricService;
import com.cn.zyrs.utils.DynamicDataSource;

@Controller
@RequestMapping("/clothfabric")
public class AppClothStoreFabricController {

	Logger log = Logger.getLogger(AppClothStoreFabricController.class);
	@Resource(name = "clothStoreFabricService")
	private AppClothStoreFabricService clothStoreFabricService;
	
	
	@ResponseBody
	@RequestMapping("/uploadimage")
	//上传面料图片
	public void uploadclothfabricimagename(HttpServletRequest request, HttpServletResponse response)throws IOException {
		response.setContentType("textml");
		response.setCharacterEncoding("utf-8");

//		String type = request.getParameter("type");
		//声明上传路径  此处是本地路径
//		String rootPath = request.getSession().getServletContext().getRealPath("/")+ "Dress/data/MainModel/" + type + "_mainmodel";
//		String rootPath = "C:\\toclothjson\\ClothStoreFabric_Image";
//		String rootPath = "D:\\JAVA\\apache-tomcat-7.0.65\\webapps\\zyrsback\\APP_Server\\toclothjson";
		String rootPath = "D:/JAVA/apache-tomcat-7.0.65/webapps/zyrsback/APP_Server/toclothjson";
		String name = UUID.randomUUID().toString() + ".jpg";

		MultipartHttpServletRequest multipartRequest = (MultipartHttpServletRequest) request;
		MultipartFile multipartFile = multipartRequest.getFile("upfile");
		String fName = multipartFile.getOriginalFilename();
		File file = new File(rootPath, fName);
		
//		if(file.exists()){
//			file.delete();
//		}
		FileUtils.copyInputStreamToFile(multipartFile.getInputStream(), file);
		//对图片件进行md5
		String md5 = DigestUtils.md5Hex(new FileInputStream(file));
		String filesize = multipartFile.getSize() / 1024L + "k";

		JSONObject res = new JSONObject();
		res.put("path", rootPath);
		res.put("exName", fName);
//		res.put("name", name);
		res.put("clothfabricimagename", fName);
        //获取模型图片url存放地址
		res.put("clothfabricimageurl", rootPath);
		//获取模型图片md5
		res.put("clothfabricimagemd5", md5);
//		获取图片尺寸
		res.put("clothfabricimagesize", filesize);
		response.setContentType("text/html;charset=utf-8");
		response.getWriter().write(res.toJSONString());

		log.info(fName + "上传成功！");
	}
	
	@ResponseBody
	@RequestMapping("/uploadfile")
	//上传面料模型
	public void uploadclothfabricfilename(HttpServletRequest request, HttpServletResponse response)throws IOException {
		response.setContentType("textml");
		response.setCharacterEncoding("utf-8");

//		String type = request.getParameter("type");
		//声明上传路径  本地路径
//		String rootPath = request.getSession().getServletContext().getRealPath("/")+ "Dress/data/Commodity/" + type + "_commodity";
//		String rootPath = "C:\\toclothjson\\ClothStoreFabric_Model";
		String rootPath = "D:/JAVA/apache-tomcat-7.0.65/webapps/zyrsback/APP_Server/toclothjson";
//		String rootPath = request.getSession().getServletContext().getRealPath("/")+ "Dress/data/" + type + "_clothfabric";
//		String name = UUID.randomUUID().toString() + ".assetbundle";
//		String name = UUID.randomUUID().toString() + ".jpg";
		MultipartHttpServletRequest multipartRequest = (MultipartHttpServletRequest) request;
		MultipartFile multipartFile = multipartRequest.getFile("upfile2");
		String fName = multipartFile.getOriginalFilename();
		File file = new File(rootPath, fName);
		
		
//		if(file.exists()){
//			file.delete();
//		}
		FileUtils.copyInputStreamToFile(multipartFile.getInputStream(), file);
//		String filesize = multipartFile.getSize() / 1024L + "k";
		
		//对文件件进行md5密
		String md5 = DigestUtils.md5Hex(new FileInputStream(file));

		JSONObject res = new JSONObject();
		res.put("path", rootPath);
		res.put("exName", fName);
//		res.put("name", name);
		res.put("clothfabricfilename", fName);
        //获取片url
		res.put("clothfabricfileurl", rootPath);
		//获取md5
		res.put("clothfabricfilemd5", md5);

		response.setContentType("text/html;charset=utf-8");
		response.getWriter().write(res.toJSONString());
	}
	
	//生成服装面料json文件
	@ResponseBody
	@RequestMapping("/getClothStoreFabricToJson")
	public ResultJsonBean getClothStoreFabricToJson(HttpServletRequest request,HttpServletResponse response) throws IOException {
		ResultJsonBean rjb = null;
//      String type = request.getParameter("type");
//      String rootPath = request.getSession().getServletContext().getRealPath("/");
//		Map<String, String> map = new HashMap<String, String>();
//		map.put("type", type);
//      DynamicDataSource.setCustomerType(DynamicDataSource.DATA_SOURCE_1);
//		List<AppClothStoreFabric> colthStoreFabricList = this.clothStoreFabricService.getAllAppClothStoreFabric(null, null);
//		File directory = new File("c:\\toclothjson"); 
//		//拼接文件完整路径
//      String fullPath = directory + File.separator + "ClothStoreFabric" + ".json";
//      File file=new File(fullPath);
//      如果父目录不存在，创建父目录
//		if (!file.getParentFile().exists()) { 
//		    file.getParentFile().mkdirs();
//		}
//		如果已存在,删除旧文件
//		if (file.exists()) { 
//		    file.delete();
//		}
//		file.createNewFile();
//      OutputStream out=null;
//      BufferedWriter rd=null;
		
		
//      AppClothClass clothClass = new AppClothClass();
		DynamicDataSource.setCustomerType(DynamicDataSource.DATA_SOURCE_2);
        List<AppClothStoreFabric> colthStoreFabricList = this.clothStoreFabricService.getAllAppClothStoreFabric(null, null);
//		File directory = new File("c:\\toclothjson"); 
        File directory = new File("D:/JAVA/apache-tomcat-7.0.65/webapps/zyrsback/APP_Server/toclothjson"); 
		//拼接文件完整路径
        String fullPath = directory + File.separator + "ClothFabric" + ".json";
        File file=new File(fullPath);
        //如果父目录不存在，创建父目录
		if (!file.getParentFile().exists()) { 
		    file.getParentFile().mkdirs();
		}
		//如果已存在,删除旧文件
		if (file.exists()) { 
		    file.delete();
		}
		file.createNewFile();
        OutputStream out=null;
        BufferedWriter rd=null;
        
        
        
        
        
//AppClothClass clothClass = new AppClothClass();
//		
//		List<AppClothClass> colthClassList = this.clothClassService.getAllAppClothClass(clothClass, null, null);
//		File directory = new File("c:\\toclothjson"); 
//		//拼接文件完整路径
//        String fullPath = directory + File.separator + "ClothClass" + ".json";
//        File file=new File(fullPath);
//        //如果父目录不存在，创建父目录
//		if (!file.getParentFile().exists()) { 
//		    file.getParentFile().mkdirs();
//		}
//		//如果已存在,删除旧文件
//		if (file.exists()) { 
//		    file.delete();
//		}
//		file.createNewFile();
//        OutputStream out=null;
//        BufferedWriter rd=null;
        
        
		try {
			out = new FileOutputStream(file);
			 rd = new BufferedWriter(new OutputStreamWriter(out,"utf-8"));
			 JSONArray appccjson = new JSONArray();
	         for(AppClothStoreFabric appcc : colthStoreFabricList){
	             JSONObject jo = new JSONObject();
	             jo.put("FABRICID", appcc.getFabricid());
	             jo.put("FABRICCODE", appcc.getFabriccode());
	             jo.put("FABRICNAME", appcc.getFabricname());
	             jo.put("BRANDID", appcc.getBrandid());
	             jo.put("CATEGORYID", appcc.getCategoryid());
	             jo.put("STYLEID", appcc.getStyleid());
	             jo.put("MODEL", appcc.getModel());
	             jo.put("STANDARD", appcc.getStandard());
	             jo.put("COLOR", appcc.getColor());
	             jo.put("COMPOSITION", appcc.getComposition());
	             jo.put("WASHINGNOTICE", appcc.getWashingnotice());
	             jo.put("WIDTH", appcc.getWidth());
	             jo.put("WEIGHT", appcc.getWeight());
	             jo.put("YARN", appcc.getYarn());
	             jo.put("UNIT", appcc.getUnit());
	             jo.put("PRICE", appcc.getPrice());
	             jo.put("BOMNO", appcc.getBomno());
	             jo.put("FACTORYID", appcc.getFactoryid());
	             jo.put("CHANNEL", appcc.getChannel());
	             jo.put("PURCHASEPRICE", appcc.getPurchaseprice());
	             jo.put("ISVALID", appcc.getIsvalid());
	             jo.put("COMPANYID", appcc.getCompanyid());
	             jo.put("PICTURE", appcc.getPicture());
	             jo.put("VERSION", appcc.getVersion());
	             jo.put("ISSTOREWARN", appcc.getIsstorewarn());
	             jo.put("NORMAL_IMAGE", appcc.getNormal_image());
	             jo.put("BIG_IMAGE", appcc.getBig_image());
	             jo.put("SMALL_IMAGE", appcc.getSmall_image());
	             jo.put("CREATER", appcc.getCreater());
	             jo.put("CREATEDATE", appcc.getCreatedate());
	             jo.put("MODIFIER", appcc.getModifydate());
	             jo.put("MODIFYDATE", appcc.getModifydate());
	             jo.put("PADENABLE", appcc.getPadenable());
	             jo.put("clothfabricfilename", appcc.getClothfabricfilename());
	             jo.put("clothfabricfileurl", appcc.getClothfabricfileurl());
	             jo.put("clothfabricfilemd5", appcc.getClothfabricfilemd5());
	             jo.put("clothfabricfiletools", appcc.getClothfabricfiletools());
	             jo.put("clothfabricimagename", appcc.getClothfabricimagename());
	             jo.put("clothfabricimageurl", appcc.getClothfabricimageurl());
	             jo.put("clothfabricimagemd5", appcc.getClothfabricimagemd5());
	             jo.put("clothfabricimagesize", appcc.getClothfabricimagesize());
	             appccjson.add(jo);
//		         rd.write(jo.toString());
	         }
	         rd.write(appccjson.toString());
			 rd.close();
             out.close();
		} catch (FileNotFoundException e1) {
			e1.printStackTrace();
		}
		return rjb;
	}
	
	
	
	
	
	
	
	
	
	//类型生成json
//	@Test  
//	public void addClassToJsonTest() throws IOException {
//		AppClothClass clothClass = new AppClothClass();
//		
//		List<AppClothClass> colthClassList = this.clothClassService.getAllAppClothClass(clothClass, null, null);
//		File directory = new File("c:\\toclothjson"); 
//		//拼接文件完整路径
//        String fullPath = directory + File.separator + "ClothClass" + ".json";
//        File file=new File(fullPath);
//        //如果父目录不存在，创建父目录
//		if (!file.getParentFile().exists()) { 
//		    file.getParentFile().mkdirs();
//		}
//		//如果已存在,删除旧文件
//		if (file.exists()) { 
//		    file.delete();
//		}
//		file.createNewFile();
//        OutputStream out=null;
//        BufferedWriter rd=null;
//		try {
//			out = new FileOutputStream(file);
//			 rd = new BufferedWriter(new OutputStreamWriter(out,"utf-8"));
//			 JSONArray appccjson = new JSONArray();
//	         for(AppClothClass appcc : colthClassList){
//	             JSONObject jo = new JSONObject();
//	             jo.put("clothclassid", appcc.getClothclassid());
//	             jo.put("clothclasscnname", appcc.getClothclasscnname());
//	             jo.put("clothclassengname", appcc.getClothclassengname());
//	             jo.put("clothclasssex", appcc.getClothclasssex());
//	             jo.put("clothclassistrue", appcc.getClothclassistrue());
//	             jo.put("clothclasscode", appcc.getClothclasscode());
//	             
//	            
//	             appccjson.add(jo);
////		             rd.write(jo.toString());
//	            
//	         }
//	         rd.write(appccjson.toString());
//			 rd.close();
//             out.close();
//		} catch (FileNotFoundException e1) {
//			e1.printStackTrace();
//		}
//    }
	
	
	//查询所有服装面料
	@ResponseBody
	@RequestMapping("/getClothStoreFabric")
	public ResultJsonBean getAllClothModel(HttpServletRequest request,HttpServletResponse response) {
		
		ResultJsonBean rjb = null;
		
        
		DynamicDataSource.setCustomerType(DynamicDataSource.DATA_SOURCE_2);
        List<AppClothStoreFabric> colthClassList = this.clothStoreFabricService.getAllAppClothStoreFabric(null, null);
		rjb = new ResultJsonBean(true, colthClassList, "1", "服装面料查询成功！");
		return rjb;
    }
	
	//根据ID查询面料
	@ResponseBody
	@RequestMapping("/getAllClothFabricById")
	public ResultJsonBean getAllClothFabricById(HttpServletRequest request,HttpServletResponse response) {
		
		ResultJsonBean rjb = null;
		
		String fabricid = request.getParameter("id");
		System.out.println(fabricid+"获取面料id +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++");
		DynamicDataSource.setCustomerType(DynamicDataSource.DATA_SOURCE_2);
        List<AppClothStoreFabric> colthClassList = this.clothStoreFabricService.getAllAppClothStoreFabricById(fabricid);
		rjb = new ResultJsonBean(true, colthClassList, "1", "服装面料查询成功！");
		return rjb;
    }
	
	//根据ID修改面料
	@ResponseBody
	@RequestMapping("/updateClothFabricById")
	public ResultJsonBean updateClothFabricById(HttpServletRequest request,HttpServletResponse response) {
		ResultJsonBean rjb = null;
		AppClothStoreFabric clothStoreFabric = new AppClothStoreFabric();
		String fabricid = request.getParameter("id");
		String clothfabricfilename = request.getParameter("clothfabricfilename");
		String clothfabricfileurl = request.getParameter("clothfabricfileurl");
		String clothfabricfilemd5 = request.getParameter("clothfabricfilemd5");
		String clothfabricfiletools = request.getParameter("clothfabricfiletools");
		String clothfabricimagename = request.getParameter("clothfabricimagename");
		String clothfabricimageurl = request.getParameter("clothfabricimageurl");
		String clothfabricimagemd5 = request.getParameter("clothfabricimagemd5");
		String clothfabricimagesize = request.getParameter("clothfabricimagesize");
		System.out.println(clothfabricfilename);
		
		System.out.println(clothfabricfilemd5);
		System.out.println(clothfabricfiletools);
		
		clothStoreFabric.setFabricid(fabricid);
		clothStoreFabric.setClothfabricfilename(clothfabricfilename);
		clothStoreFabric.setClothfabricfileurl(clothfabricfileurl);
		clothStoreFabric.setClothfabricfilemd5(clothfabricfilemd5);
		clothStoreFabric.setClothfabricfiletools(clothfabricfiletools);
		clothStoreFabric.setClothfabricimagename(clothfabricimagename);
		clothStoreFabric.setClothfabricimageurl(clothfabricimageurl);
		clothStoreFabric.setClothfabricimagemd5(clothfabricimagemd5);
		clothStoreFabric.setClothfabricimagesize(clothfabricimagesize);
		DynamicDataSource.setCustomerType(DynamicDataSource.DATA_SOURCE_2);
        
        int res = -1;
		res = this.clothStoreFabricService.upAppClothStoreFabric(clothStoreFabric);

		if (res == 1) {
			log.info("修改数据面料成功！");
			rjb = new ResultJsonBean(true, res, "1", "修改面料成功！");
		} else {
			log.error("修改数据面料失败！");
			rjb = new ResultJsonBean(false, res, "-1", "修改面料失败！");
		}
		return rjb;
    }
}
