package com.cn.zyrs.controller;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.List;
import java.util.UUID;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.codec.digest.DigestUtils;
import org.apache.commons.io.FileUtils;
import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.alibaba.fastjson.JSONObject;
import com.cn.zyrs.domain.AppClothMainModel;
import com.cn.zyrs.domain.ResultJsonBean;
import com.cn.zyrs.service.AppClothMainService;

@Controller
@RequestMapping("/clothmainmodel")
public class AppClothMainModelController {

	Logger log = Logger.getLogger(AppClothMainModelController.class);
	@Resource(name = "clothMainModelService")
	private AppClothMainService clothMainService;
	
    //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//	@ResponseBody
//	@RequestMapping("/uploadimage")
	//上传主模型图片
//	public void uploadimage(HttpServletRequest request, HttpServletResponse response)throws IOException {
//		response.setContentType("textml");
//		response.setCharacterEncoding("utf-8");
//
//		String type = request.getParameter("type");
//		//声明上传路径
//		String rootPath = request.getSession().getServletContext().getRealPath("/")+ "Dress/data/MainModel/" + type + "_mainmodel";
//		String name = UUID.randomUUID().toString() + ".jpg";
//
//		MultipartHttpServletRequest multipartRequest = (MultipartHttpServletRequest) request;
//		MultipartFile multipartFile = multipartRequest.getFile("upfile");
//		String fName = multipartFile.getOriginalFilename();
//		File file = new File(rootPath, fName);
//		
////		if(file.exists()){
////			file.delete();
////		}
//		FileUtils.copyInputStreamToFile(multipartFile.getInputStream(), file);
//		//对模型图片件进行md5
//		String md5 = DigestUtils.md5Hex(new FileInputStream(file));
//		String filesize = multipartFile.getSize() / 1024L + "k";
//
//		JSONObject res = new JSONObject();
//		res.put("path", rootPath);
//		res.put("exName", fName);
////		res.put("name", name);
//		res.put("name", fName);
//		res.put("filesize", filesize);
//		//获取模型图片url存放地址
//		res.put("cmmimageurl", rootPath);
//		//获取模型图片md5
//		res.put("cmmimagemd5", md5);
//		response.setContentType("text/html;charset=utf-8");
//		response.getWriter().write(res.toJSONString());
//
//		log.info(fName + "上传成功！");
//	}
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	

	@ResponseBody
	@RequestMapping("/uploadimage")
//	上传主模型图片
	public void uploadimage(HttpServletRequest request, HttpServletResponse response)throws IOException {
		response.setContentType("textml");
		response.setCharacterEncoding("utf-8");

		String type = request.getParameter("type");
		//声明上传路径
//		String rootPath = request.getSession().getServletContext().getRealPath("/")+ "Dress/data/MainModel/" + type + "_mainmodel";
		String rootPath = "C:/toclothjson";
//		String rootPath = "D:/JAVA/apache-tomcat-7.0.65/webapps/zyrsback/APP_Server/toclothjson";
		String name = UUID.randomUUID().toString() + ".jpg";

		MultipartHttpServletRequest multipartRequest = (MultipartHttpServletRequest) request;
		MultipartFile multipartFile = multipartRequest.getFile("upfile");
		String fName = multipartFile.getOriginalFilename();
		File file = new File(rootPath, fName);
		
//		if(file.exists()){
//			file.delete();
//		}
		FileUtils.copyInputStreamToFile(multipartFile.getInputStream(), file);
		//对模型图片件进行md5
		String md5 = DigestUtils.md5Hex(new FileInputStream(file));
		String filesize = multipartFile.getSize() / 1024L + "k";

		JSONObject res = new JSONObject();
		res.put("path", rootPath);
		res.put("exName", fName);
//		res.put("name", name);
		res.put("name", fName);
		res.put("filesize", filesize);
		//获取模型图片url存放地址
		res.put("cmmimageurl", rootPath);
		//获取模型图片md5
		res.put("cmmimagemd5", md5);
		response.setContentType("text/html;charset=utf-8");
		response.getWriter().write(res.toJSONString());

		log.info(fName + "上传成功！");
	}

	
	
	@ResponseBody
	@RequestMapping("/uploadmainmodel")
	//上传主模型
	public void uploadmainmodel(HttpServletRequest request, HttpServletResponse response)throws IOException {
		response.setContentType("textml");
		response.setCharacterEncoding("utf-8");

//		String type = request.getParameter("type");
		//声明上传路径
		//String rootPath = request.getSession().getServletContext().getRealPath("/")+ "Dress/data/Commodity/" + type + "_commodity";
		String rootPath = "C:/toclothjson";
		String name = UUID.randomUUID().toString() + ".assetbundle";
//		String name = UUID.randomUUID().toString() + ".jpg";
		MultipartHttpServletRequest multipartRequest = (MultipartHttpServletRequest) request;
		MultipartFile multipartFile = multipartRequest.getFile("upfile2");
		String fName = multipartFile.getOriginalFilename();
		File file = new File(rootPath, fName);
		
		
//		if(file.exists()){
//			file.delete();
//		}
		FileUtils.copyInputStreamToFile(multipartFile.getInputStream(), file);
		String filesize = multipartFile.getSize() / 1024L + "k";
		
		//对文件件进行md5密
		String md5 = DigestUtils.md5Hex(new FileInputStream(file));

		JSONObject res = new JSONObject();
		res.put("path", rootPath);
		res.put("exName", fName);
//		res.put("name", name);
		res.put("name", fName);
		res.put("filesize", filesize);
		//获取模型url存放地址
		res.put("clothmainmodelurl", rootPath);
		//获取模型md5
		res.put("clothmainmodelmd5", md5);
		response.setContentType("text/html;charset=utf-8");
		response.getWriter().write(res.toJSONString());

		log.info(fName + "主模型上传成功！");
	}
	
	//查询所有服装主模型
	@ResponseBody
	@RequestMapping("/getClothMainModel")
	public ResultJsonBean getClothMainModel(HttpServletRequest request,HttpServletResponse response) {
		
		ResultJsonBean rjb = null;
		AppClothMainModel colthMainModel = new AppClothMainModel();
        List<AppClothMainModel> colthMainModelist = this.clothMainService.getAllAppClothMainModel(colthMainModel, null, null);
		rjb = new ResultJsonBean(true, colthMainModelist, "1", "服装主模型查询成功！");
		return rjb;
    }
    
	//增加新的主模型
	@ResponseBody
	@RequestMapping("/addClothMainModel")
	public ResultJsonBean addClothMainModel(HttpServletRequest request, HttpServletResponse response) {
		ResultJsonBean rjb = null;
		AppClothMainModel colthMainModel = new AppClothMainModel();
		
	        // 入参
			String clothmainmodelcnname = request.getParameter("clothmainmodelcnname");
			String clothmainmodelengname = request.getParameter("clothmainmodelengname");
			String cmmbyclothclass = request.getParameter("cmmbyclothclass");
			String cmmbodystyle = request.getParameter("cmmbodystyle");
			String cmmplatform = request.getParameter("cmmplatform");
			String clothmainmodelname = request.getParameter("clothmainmodelname");
	        String clothmainmodelurl = request.getParameter("clothmainmodelurl");
	        String clothmainmodelmd5 = request.getParameter("clothmainmodelmd5");
			String cmmimagename = request.getParameter("cmmimagename");
			String cmmimageurl = request.getParameter("cmmimageurl");
			String cmmimagemd5 = request.getParameter("cmmimagemd5");
			String cmmistrue = request.getParameter("cmmistrue");
			
	        colthMainModel.setClothmainmodelcnname(clothmainmodelcnname);
			colthMainModel.setClothmainmodelengname(clothmainmodelengname);
			colthMainModel.setCmmbyclothclass(cmmbyclothclass);
			colthMainModel.setCmmbodystyle(cmmbodystyle);
			colthMainModel.setCmmplatform(cmmplatform);
			colthMainModel.setClothmainmodelname(clothmainmodelname);
			colthMainModel.setClothmainmodelurl(clothmainmodelurl);
			colthMainModel.setClothmainmodelmd5(clothmainmodelmd5);
			colthMainModel.setCmmimagename(cmmimagename);
			colthMainModel.setCmmimageurl(cmmimageurl);
			colthMainModel.setCmmimagemd5(cmmimagemd5);
			colthMainModel.setCmmistrue(cmmistrue);
			int res = -1;
			res = this.clothMainService.addAppClothMainModel(colthMainModel);

			if (res == 1) {
				log.info("新增数据成功！");
				rjb = new ResultJsonBean(true, res, "1", "新增数据成功！");
			} else {
				log.error("新增数据失败！");
				rjb = new ResultJsonBean(false, res, "-1", "新增数据失败！");
			}
		return rjb;
	}
    
	
	
	//删除主模型
	@ResponseBody
	@RequestMapping("/delClothMainModel")
	public ResultJsonBean delClothMainModel(HttpServletRequest request,HttpServletResponse response) {
		
		String clothMainId = request.getParameter("ids");
		ResultJsonBean rjb = null;
        int res1 = this.clothMainService.delAppClothMainModel(clothMainId);
		if(res1==1){
			log.info("删除成功！");
			rjb = new ResultJsonBean(true, res1, "1", "删除成功！");
			return rjb;
		}else{
			log.error("删除失败！");
			rjb = new ResultJsonBean(false, res1, "-1", "删除失败！");
			return rjb;
		}
    }
}
